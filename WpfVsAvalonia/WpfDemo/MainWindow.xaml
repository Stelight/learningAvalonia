<Window
    Height="600"
    Title="MainWindow"
    Width="800"
    d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
    mc:Ignorable="d"
    x:Class="WpfDemo.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:control="clr-namespace:WpfDemo.controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:WpfDemo.ViewModels"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Window.Resources>
        <Style TargetType="Button" x:Key="NormalButtonStyle">
            <Setter Property="Background" Value="LightGray" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="12,6" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <ContentPresenter
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid ShowGridLines="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="100" />
            <RowDefinition Height="100" />
            <RowDefinition Height="100" />
            <RowDefinition Height="100" />
            <RowDefinition Height="100" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <control:BlinkingButton
            BlinkingStarted="BlinkingButton_OnBlinkingStarted"
            BlinkingStopped="BlinkingButton_OnBlinkingStopped"
            Click="ButtonBase_OnClick"
            Content="点击我"
            FontSize="20"
            Grid.Column="0"
            Grid.Row="0"
            Height="80"
            HorizontalAlignment="Center"
            IsBlinking="False"
            VerticalAlignment="Center"
            Width="300"
            x:Name="MyBlinkButton" />
        <Button
            Background="{StaticResource PrimaryColorBrush}"
            Content="我是一个圆角按钮"
            FontSize="{StaticResource DefaultFontSize}"
            FontWeight="{StaticResource BoldFontWeight}"
            Grid.Column="0"
            Grid.Row="1"
            Height="80"
            HorizontalAlignment="Center"
            Style="{StaticResource RoundedButtonStyle}"
            VerticalAlignment="Center"
            Width="300" />
        <Button
            Background="{StaticResource SecondaryColorBrush}"
            Content="我是一个圆角按钮"
            FontSize="{StaticResource DefaultFontSize}"
            FontWeight="{StaticResource BoldFontWeight}"
            Grid.Column="0"
            Grid.Row="2"
            Height="80"
            HorizontalAlignment="Center"
            Style="{StaticResource RoundedButtonStyle}"
            VerticalAlignment="Center"
            Width="300" />
        <Button
            Background="{StaticResource PrimaryColorBrush}"
            Content="EventTrigger"
            FontSize="{StaticResource DefaultFontSize}"
            FontWeight="{StaticResource BoldFontWeight}"
            Foreground="DodgerBlue"
            Grid.Column="0"
            Grid.Row="3"
            Height="80"
            HorizontalAlignment="Center"
            RenderTransformOrigin="0.5,0.5"
            Style="{StaticResource RoundedButtonStyle}"
            VerticalAlignment="Center"
            Width="300">
            <Button.RenderTransform>
                <RotateTransform Angle="0" />
            </Button.RenderTransform>
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop" RepeatBehavior="Forever">
                            <ColorAnimation
                                Duration="0:0:0.2"
                                Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                To="Red" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Duration="0:0:0.5"
                                Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                To="DodgerBlue" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.Click">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                By="360"
                                Duration="0:0:0.5"
                                Storyboard.TargetProperty="(Button.RenderTransform).(RotateTransform.Angle)" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>
        <control:TriangleControl
            Fill="Crimson"
            Grid.Column="1"
            Grid.Row="0"
            Height="100"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Width="100" />
        <control:TriangleControl
            Fill="DarkOrange"
            Grid.Column="1"
            Grid.Row="1"
            Height="100"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Width="100" />

        <!--  下面的控件用于演示style中Trigger的使用  -->
        <StackPanel
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Grid.Row="4"
            Orientation="Horizontal">
            <!--  1. Trigger鼠标悬停和按下（基础属性触发）  -->
            <Button
                Content="Trigger"
                Height="60"
                Margin="5"
                Padding="10,5"
                Width="200">
                <Button.Style>
                    <Style BasedOn="{StaticResource NormalButtonStyle}" TargetType="Button">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DodgerBlue" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="DarkBlue" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <!--  2. MultiTrigger多条件组合触发  -->
            <Button
                Content="MultiTrigger"
                Height="60"
                Margin="5"
                Padding="10,5"
                Width="200">
                <Button.Style>
                    <Style BasedOn="{StaticResource NormalButtonStyle}" TargetType="Button">
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsPressed" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="Green" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsPressed" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="GreenYellow" />
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

            </Button>
            <!--  3. DataTrigger数据性触发  -->
            <Button
                Content="DataTrigger"
                Height="60"
                Margin="5"
                Padding="10,5"
                Width="200">
                <Button.Style>
                    <Style BasedOn="{StaticResource NormalButtonStyle}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status}" Value="True">
                                <Setter Property="Background" Value="GreenYellow" />
                                <Setter Property="Foreground" Value="DarkRed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="False">
                                <Setter Property="Background" Value="DarkRed" />
                                <Setter Property="Foreground" Value="GreenYellow" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding ChangeStatusCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <i:Interaction.Behaviors />
            </Button>
        </StackPanel>
    </Grid>
</Window>